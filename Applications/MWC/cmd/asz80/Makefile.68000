PLATFORM = 68000
CC = m68k-uclinux-gcc
ASM = m68k-uclinux-as
AR = m68k-uclinux-ar
LINKER = m68k-uclinux-ld
CFLAGS = -Os -fno-strict-aliasing -fomit-frame-pointer -fno-builtin -Wall -m68000 -I../../../../Library/include -I../../../../Library/include/68000
LINKER_OPT = -L../../../../Library/libs -lc68000
LIBGCCDIR = $(dir $(shell $(CC) -print-libgcc-file-name))
LINKER_OPT += --emit-relocs -L$(LIBGCCDIR) -lgcc -T ../../../../Library/elf2flt.ld
CRT0 = ../../../../Library/libs/crt0_68000.o
CRT0NS = ../../../../Library/libs/crt0nostdio_68000.o
# For now while we get going. Really we want to use some kind of elf2zmagic
# with relocs.
ELF2FUZIX = elf2flt
.SUFFIXES: .c .o

SRCS  = as0.c as1.c as2.c as3.c as4.c as6.c

INCS  = as.h obj.h

OBJS = $(SRCS:.c=.o)

all: as nm

$(OBJS): $(INCS)

OBJS = $(SRCS:.c=.o)

$(OBJS): %.o : %.c
	$(CC) -c $(CFLAGS) $(COPT) $<

as: $(CRT0) $(OBJS)
	$(LINKER) $^ -o $@.bin $(LINKER_OPT)
	$(ELF2FUZIX) -o $@ $@.bin

nm: $(CRT0) nm.o
	$(LINKER) $^ -o $@.bin $(LINKER_OPT)
	$(ELF2FUZIX) -o $@ $@.bin

nm.c: obj.h
	
size.report: $(APPS)
	ls -l $^ > $@

clean:
	rm -f $(OBJS) $(APPS) $(SRCS:.c=) core *~ *.asm *.lst *.sym *.map *.noi *.lk *.ihx *.tmp *.bin size.report *.o

rmbak:
	rm -f *~ core

