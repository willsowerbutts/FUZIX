CC = gcc
CFLAGS = -DTINY -DINCDIR=\"includes/\" -DCROSS
COPT = -O2

OBJS = initials.o data.o error.o expr.o function.o gen.o io.o \
       lex.o main.o outstack.o preproc.o primary.o stmt.o struct.o sym.o while.o

OBJ_Z80 = codez80.o
OBJ_8080 = code8080.o
OBJ_6801 = code6801.o
OBJ_6809 = code6809.o
OBJ_GENERIC = codegeneric.o

OBJ_COPT = copt.o

OBJ_CC = frontend.o

INC = data.h defs.h prototype.h

OBJS_ALL = $(OBJS) $(OBJ_Z80) $(OBJ_8080)

all:    lscc6801 lscc6809 lscc8080 lsccgeneric lsccz80 copt cc

lsccz80: $(OBJS) $(OBJ_Z80)
	$(CC) -o lsccz80 $(OBJS) $(OBJ_Z80)

lscc8080: $(OBJS) $(OBJ_8080)
	$(CC) -o lscc8080 $(OBJS) $(OBJ_8080)

lscc6801: $(OBJS) $(OBJ_6801)
	$(CC) -o lscc6801 $(OBJS) $(OBJ_6801)

lscc6809: $(OBJS) $(OBJ_6809)
	$(CC) -o lscc6809 $(OBJS) $(OBJ_6809)

lsccgeneric: $(OBJS) $(OBJ_GENERIC)
	$(CC) -o lsccgeneric $(OBJS) $(OBJ_GENERIC)

copt:	$(OBJ_COPT)
	$(CC) -o copt $(OBJ_COPT)

cc:	$(OBJ_CC)
	$(CC) -o cc $(OBJ_CC)

clean:
	rm -f $(OBJ) lscc8080 lsccz80 lscc6801 lscc6809 lsccgeneric *.o *~

.c.o:
	$(CC) $(COPT) $(CFLAGS) -c $< -o $@

$(OBJS_ALL) : $(INC)
